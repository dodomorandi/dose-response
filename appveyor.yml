# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
    RUST_VERSION: nightly

    CRATE_NAME: dose-response

  matrix:
    # MinGW
    # NOTE: The sdl building + mingw doesn't work right now. Disabling it for now.
    # - TARGET: i686-pc-windows-gnu
    #   RUST_VERSION: nightly
    # - TARGET: x86_64-pc-windows-gnu
    #   RUST_VERSION: nightly

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
    # - TARGET: x86_64-pc-windows-gnu
    #   RUST_VERSION: nightly
    # - TARGET: x86_64-pc-windows-msvc
    #   RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release
    )

before_deploy:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
        $Env:CMAKE_MAKE_PROGRAM = 'mingw32-make.exe'
        $Env:CMAKE_C_COMPILER = 'gcc.exe'
        $Env:CMAKE_AR = 'gcc-ar.exe'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
        $Env:CMAKE_MAKE_PROGRAM = 'mingw32-make.exe'
        $Env:CMAKE_C_COMPILER = 'i686-w64-mingw32-gcc.exe'
        $Env:CMAKE_AR = 'i686-w64-mingw32-gcc-ar.exe'
      }
  - dir "C:\msys64\mingw32\bin"
  - echo %PATH%
  - set
  # TODO Update this to build the artifacts that matter to you
  # - cargo rustc --target %TARGET% --release --bin hello -- -C lto
  - set CMAKE_MAKE_PROGRAM = 'mingw32-make.exe'
  - set CMAKE_C_COMPILER = 'gcc.exe'
  - set CMAKE_AR = 'gcc-ar.exe'
  - cargo rustc --target %TARGET% --release  --no-default-features --features "prod"
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.tar.gz/
  auth_token:
    secure: "/ItkeB7N8x3jUWjM0NWJhVPjx5jaEcEGgTC1GYWUGCHQSQwKcQ/tUqoGj7+HwaCk"
  description: ''
  on:
    RUST_VERSION: nightly
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

# disable automatic builds
build: false
